
#include<bits/stdc++.h>
using namespace std;

class falsePosition_M
{
private:
    double tolarence = 0.0001;
    double a,b,root;
    double function(double x)
    {
        return pow(x, 3) + pow(x, 2) - 1;
    }
    double intersect(double a, double b)
    {
        return a- ((function(a)*(b-a))/(function(b) - function(a)));
    }
public:
    void solve()
    {
        srand(time(0));
        while(1)
        {
            a = -9+ rand() %10;
            b = rand() %10;
            if(function(a)*function(b)<0)
            {
                break;
            }
        }
        while(1)
        {
            root = intersect(a,b);
            printf("a =%9f  b =%9f root = %9f\n",a,b,root);
            if(function(root) == 0.0)
            {
                break;
            }
            if(function(a) * function(b)>0)
            {
                a = root;
            }
            else
            {
                b = root;
            }
            if(abs((root - intersect(a,b)) <tolarence))
        {
            break;
        }
    }
    cout<< "the root is"<< root <<"(upto 3 decimal number.)"<<endl;
}
};
int main()
{
    falsePosition_M f;
    f.solve();
    return 0;
}
